Good Morning to All...!!!


Wait for few minutes others can join the session
Yesterday
--------
		GIT&GITHUB:Distributed Version System
		Git:Local Software
		github:Cloud(Server)


Today Agenda:

	-->practicing on Linux Commands
	-->Practicing on Git Commands
			->git init
				Configure(username&email)
			->git confit --global user.name "vijay"
			->checking userconfiguration
				->git config user.name
			->git config --global user.email "vijay10022@gmail.com"
			->Checking emmail is configure or not
				->git config user.email
			-->git status
			-->git add foldername or filename
			-->git commit -m "I have added two folders in my folder"
			
	-->Git Local Configuration
		
	
	-->We Are Creating Bridge B/W Local Sytem to Server(Adding Remote)
	-->PUSH,PULL,CLONE,COMMIT(Saving Our Files)



-->Desktop
	Create A new Folder(ctrl+Shift+n)
	-->Create One Root Folder(Repository)
			-->Agine Create Another Folder
					-->Open Gitbash
			
	->PWD(Present Working Diretory)
	->LS(LIST OF Sourse files or Folders)
	->CD ..(Change Diretory To Back Word)
	->CD foldername (Change Diretory ot Forward)
	->CTRL+L or clear(Clear Screen)
	-->jump from one diretory to another diretory
			cd drivename:
	->MKDIR FolderName(To Create New Folder)
	->RMDIR FolderName(TO Remove or Delete Particular Folder)
	->Touch filenames (Crateing one or Multiple Files)
	->nano filename.txt
		->Editorview
			-->Save Text(ctrl+o)-->y
			-->Exit From Editor(ctrl+x)
	->Cat file.txt ||More (Accessing Data From Files  and Data Copy from one file to anotherfile )
	->rm filename (Removing or Delete File)
	->Echo(Display somthing into Command or Files)
	->echo {1..10}
			Generate 1 to 10 Values
	->echo {1..1000}
			Generate 1 to 1000 values
	->echo "Hello all" >> filename.txt
		storing message into file
	->echo {1..100} >> values.txt
		Generating 1 to 100 Values and storing that values into file
	->rm *
	->touch file{1..10}.txt
		(Creating Multiple file from 1 to 10)
	->rm file{11..1000}.txt
		(Deleting From 11 to 1000 files)
	-->Create Multiple files with multiple extension from 1 to 10
	->rm file{5..10}.txt c_language{5..10}.c python{5..10}.py htmlfile{5..10}.html
	->rm *(all).txt(delting all Files with extension .txt)
	->rm * (Delete All files with diretory)
	->cat sourcefile >> destinationfile
		(copy Data from Source to Destination)
	
	->MV(Moving Files from Sourse To Destination)
		mv sourcefile destinationfile
		-->mv source.txt destination.txt
		When Ever Pass Above Command source file is deleted
		
	->cp sourcefile destinationfile
		(Copy data from one file to another file)
	->ls -l(List of Hidden Files)
	
	Today(Day-3[19-05-2021])
		Agenda:
				
	->Git init
		1).local
			Myfolder
					->one Project
				git config user.name "vijay"
				git config user.email "vijay10022@gmail"
				
			Myfolder2
					->Second Project
					git config user.name "vijay"
					git config user.email "vijay10022@gmail"
		2).global
				Entire System:
					git config --global user.name "Vijay"
					git config --global user.email "vijay10022@gmail.com"
		-> mkdir Day-3
		->cd Day-3
		->nano demo.txt
				This is demo file
			->ctrl+o
			->ctrl+x
		->git adding
				->single file 
					1).git add demo.txt
				->Multiple files
					1).git add --all or git add --a
					2).git add *
					3).git add .
		staging :
				-->git status
			-->untracked(red color)
					before adding files
			-->tracked(green color)
					(after adding files)
		-->Commit(siving)
			->git commit -m "Message (Day-3 folder is added)"
		-->Adding Remote
			->git remote add remotename(userdefined) url
				git remote add gist https://github.com/readytoashare/APSSDc-PYTHON-GIST.git
		
		->checking 
				git remote -v
				
		-->Sending data from local to server(github)
			->git push -u remotename master(branch name)
				ex:git push -u gist master
		-->update file in github
			commit changes
		-->git pull remotename master(fetching data from Cloud)
			ex:git pull gist master
			
		-->clone(getting repository(other person) from cloud to local)
			->git clone repositoryurl
		
		-->fork(github repository (other person) taking into our repository
		
		-->Markdown systax
				-->prepare documentation
				
	
	
	
	Today Agenda[20-05-2020]
		--> Python Inro
				-> python is a general Purpose interpreated,iterative,object orinted and high level programming lanugae
				-> it was created by GUDIO VAN ROSSUM  in the year of 1991
				-> it is easy to learn and easy to implement
				-> it have lot of modules and  packages
				-> syntax  is simple compare to other languages like c,C++,Java ....
				-> python fallows indentation(one tab space)
						-->controll Statements
						-->itetation
					c
					 #inlude<stdio.h>
					 int main(){
						int data=[];
						scanf("%s ",data);
						printf("Hello Good Morning ");
						if ('a'=='a'){
							printf("Yes");
							printf("True");'
						}
						else{
							printf("No");
							printf("False")
						}
						return 0;
					 }
					 
					 python:
						data=input("Enter Data")
						print("Hello Good Morning")
						if('a'=='a'):
							print("YES")
							if(10==10):
								print("YES")
								for i in range(10,20):
									
					
				
				
		-> Features of Python,
			-->simple and Easy to learn
			-->free & open Sourse
			-->high Level Laguage
			-->portable
			-->it support different Programming paradigm
			-->Extensible
			-->Interpreated
			-->Object -Orinted 
				
		-> What is the use of python?(img)
		--> python is communicate different platforms
				-->Web Development
					-->Django
					-->Flask
					-->py
						
				-->Desktop application
					-->Tkinter
				-->Hardware intration
					->Rasberrypi(Hardware Component)-->IOT
						-->Python
						
							
						
		-> Difference B/W Python3 and Python 2
		-> instatiion
			-->Various platfoms
				-->online
						online python compillers
							->https://www.programiz.com/python-programming/online-compiler/
							->Google Colab(Access this one we need gmail account)
				-->offline
						Python Software link:https://www.python.org/downloads/windows/
								3.6,3.7,3.8,3.9
								
					-->IDLE
					-->Commandpromt
			-->Anacond Navigator
					link :https://www.anaconda.com/products/individual
					
					-->ipynb:integrated python notebook 
					-->py:python
			
		-> Variables
				declaration
				
		-> keywords
		-> input and output
		-> Data types[img]
		-> operators[img]
	
